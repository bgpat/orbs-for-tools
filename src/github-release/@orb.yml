version: 2.1

description: |
  Create a new release on GitHub
  https://github.com/izumin5210/orbs-for-tools


#  Common
#----------------------------------------------------------------
common:
  ghr-params: &ghr-params
    user:
      type: string
      default: $CIRCLE_PROJECT_USERNAME
      description: "GitHub repositoy owner(username or organization name)"
    repository:
      type: string
      default: $CIRCLE_PROJECT_REPONAME
      description: "GitHub repositoy name"
    token:
      type: string
      default: $GITHUB_TOKEN
      description: "GitHub access token to create GitHub releases"
    commitish:
      type: string
      default: $CIRCLE_SHA1
      description: "git commit hash, branch, or tag of created release"
    release-name:
      type: string
      default: ""
      description: "Title of a release"
    release-body:
      type: string
      default: ""
      description: "Description of a release"
    draft:
      type: boolean
      default: false
      description: "Create as draft"
    prerelease:
      type: boolean
      default: false
      description: "Create as prerelease"
    recreate:
      type: boolean
      default: false
      description: "Delete a release before create if it already exists"
    replace:
      type: boolean
      default: false
      description: "Replace artifacts if a release is already exists"
    soft:
      type: boolean
      default: false
      description: "Stop releasing if a release already exists"
    tag:
      type: string
      default: $CIRCLE_TAG
      description: "Release tag"
    path:
      type: string
      default: "./artifacts/"
      description: "Path to artifacts"
    ghr-version:
      type: string
      default: v0.12.1
      description: "Version of github.com/tcnksm/ghr"

#  Commands
#----------------------------------------------------------------
commands:
  create:
    description: Create a new release on GitHub
    parameters:
      <<: *ghr-params

    steps:
      - run:
          name: "[ghr] Install tools"
          command: |
            archive=ghr_<<parameters.ghr-version>>_linux_amd64
            curl -L https://github.com/tcnksm/ghr/releases/download/<<parameters.ghr-version>>/${archive}.tar.gz | tar xzf -
            sudo cp ./${archive}/ghr /usr/local/bin/
            rm -rf ./${archive}

      - run:
          name: "[ghr] Create release"
          command: |
            ghr \
              -username="<<parameters.user>>" \
              -repository="<<parameters.repository>>" \
              -token="<<parameters.token>>" \
              -commitish="<<parameters.commitish>>" \
              -name="<<parameters.release-name>>" \
              -body="<<parameters.release-body>>" \
              <<#parameters.draft>>--draft <</ parameters.draft>>\
              <<#parameters.prerelease>>--prerelease <</ parameters.prerelease>>\
              <<#parameters.recreate>>--recreate <</ parameters.recreate>>\
              <<#parameters.replace>>--replace <</ parameters.replace>>\
              <<#parameters.soft>>--soft <</ parameters.soft>>\
              <<parameters.tag>> \
              <<parameters.path>>

#  Jobs
#----------------------------------------------------------------
jobs:
  create:
    description: Create a new release on GitHub

    docker:
      - image: circleci/buildpack-deps:latest

    parameters:
      <<: *ghr-params
      executor:
        description: Executor to use for releasing applications
        type: executor
        default: default
      workspace-root:
        type: string
        default: .
      attach-workspace:
        type: boolean
        default: true

    steps:
      - when:
          condition: <<parameters.attach-workspace>>
          steps:
            - attach_workspace:
                at: <<parameters.workspace-root>>
      - create:
          user: <<parameters.user>>
          repository: <<parameters.repository>>
          token: <<parameters.token>>
          commitish: <<parameters.commitish>>
          release-name: <<parameters.release-name>>
          release-body: <<parameters.release-body>>
          draft: <<parameters.draft>>
          prerelease: <<parameters.prerelease>>
          recreate: <<parameters.recreate>>
          replace: <<parameters.replace>>
          soft: <<parameters.soft>>
          tag: <<parameters.tag>>
          path: <<parameters.path>>
