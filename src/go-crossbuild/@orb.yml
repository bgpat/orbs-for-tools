version: 2.1

description: |
  Build Go applications for multiplatform
  https://github.com/izumin5210/orbs-for-tools

#  Common
#----------------------------------------------------------------
common:
  goxz-params: &goxz-params
    app-name:
      type: string
      default: $CIRCLE_PROJECT_REPONAME
    arch:
      type: string
      default: "amd64"
      description: "Space or comma separated list of GOARCH"
    dest:
      type: string
      default: "./artifacts"
      description: "Path to destination directory of built binaries"
    ldflags:
      type: string
      default: ""
      description: "'-ldflags' to pass to go build"
    tags:
      type: string
      default: ""
      description: "'-tags' to pass to go build"
    os:
      type: string
      default: "darwin,linux,windows"
      description: "Space or comma separated list of GOOS"
    packages:
      type: string
      description: "Build target package"
    goxz-version:
      type: string
      default: v0.4.1
      description: "Version of github.com/Songmu/goxz"

  ci-params: &ci-params
    workspace-root:
      type: string
      default: "."
      description: "A path to a workspace root"
    attach-workspace:
      type: boolean
      default: true
      description: "Attach to an existing workspace"
    persist-to-workspace:
      type: boolean
      default: true
      description: "Persis a current workspace"
    persist-paths:
      type: string
      default: "."
      description: "A path that will be persisted"

#  Executors
#----------------------------------------------------------------
executors:
  default:
    parameters:
      tag:
        description: Specify circleci/golang image tag
        type: string
        default: 'latest'
    docker:
      - image: circleci/golang:<< parameters.tag >>

#  Commands
#----------------------------------------------------------------
commands:
  build:
    description: Build an application
    parameters:
      <<: *goxz-params
      <<: *ci-params

    steps:
      - when:
          condition: <<parameters.attach-workspace>>
          steps:
            - attach_workspace:
                at: <<parameters.workspace-root>>

      - run:
          name: "[go-crossbuild] Install tools"
          command: |
            archive=goxz_<<parameters.goxz-version>>_linux_amd64
            curl -L https://github.com/Songmu/goxz/releases/download/<<parameters.goxz-version>>/${archive}.tar.gz | tar xzf -
            sudo cp ./${archive}/goxz /usr/local/bin/
            rm -rf ./${archive}

      - run:
          name: "[go-crossbuild] Build an application"
          command: |
            goxz \
              -arch="<<parameters.arch>>" \
              -build-ldflags="<<parameters.ldflags>>" \
              -build-tags="<<parameters.tags>>" \
              -d="<<parameters.dest>>" \
              -n="<<parameters.app-name>>" \
              -os="<<parameters.os>>" \
              <<parameters.packages>>

      - when:
          condition: <<parameters.persist-to-workspace>>
          steps:
            - persist_to_workspace:
                root: <<parameters.workspace-root>>
                paths:
                  - <<parameters.persist-paths>>

#  Jobs
#----------------------------------------------------------------
jobs:
  build:
    executor: <<parameters.executor>>
    description: Build an application for multiplatform

    parameters:
      <<: *goxz-params
      <<: *ci-params
      executor:
        description: Executor to use for building applications
        type: executor
        default: default

    steps:
      - build:
          # goxz-params
          app-name: <<parameters.app-name>>
          arch: <<parameters.arch>>
          dest: <<parameters.dest>>
          ldflags: <<parameters.ldflags>>
          tags: <<parameters.tags>>
          os: <<parameters.os>>
          packages: <<parameters.packages>>
          goxz-version: <<parameters.goxz-version>>
          # ci-params
          workspace-root: <<parameters.workspace-root>>
          attach-workspace: <<parameters.attach-workspace>>
          persist-to-workspace: <<parameters.persist-to-workspace>>
          persist-paths: <<parameters.persist-paths>>
